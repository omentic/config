##########################
### sway configuration ###
##########################

set $mod mod4
set $term kitty
set $bg "~/Pictures/backgrounds/big-sur-color-night.jpg"
set $lg $bg

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input type:touchpad {
	click_method clickfinger
	dwt enabled
#	tap enabled
#	middle_emulation enabled
}

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $bg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
	timeout 200 "swaymsg 'output * dpms off'" resume "swaymsg 'output * dpms on'" \
	timeout 300 "swaylock -f -i $lg" \
	before-sleep "swaylock -f -i $lg"
#
# This will turn off your displays after 200 seconds of inactivity, then lock
# your screen after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

gaps inner 10

# Drag windows with $mod + left mouse button. Resize with $mod + right mouse button.
floating_modifier $mod normal

workspace_auto_back_and_forth yes

title_align center

########################
### sway keybindings ###
########################

##########
# basics #
##########

# Start a terminal
bindsym $mod+return exec $term

# Start your launcher
bindsym $mod+space exec rofi -i -show drun | xargs swaymsg exec --

# Launch a window switcher
bindsym $mod+shift+space exec rofi -i -show window | xargs swaymsg exec --

# Kill focused window
bindsym $mod+w kill

# Reload sway
bindsym $mod+r reload

# Exit sway
bindsym $mod+shift+r exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Lock the screen
bindsym $mod+backspace exec swaylock -i $bg

# Dismiss notification
bindsym $mod+grave exec dunstctl close

# Show previous notification
bindsym $mod+shift+grave exec dunstctl history-pop

#################
# moving around #
#################

# Move your focus around
#bindsym $mod+left focus left
#bindsym $mod+down focus down
#bindsym $mod+up focus up
#bindsym $mod+right focus right

# Move the focused window around
bindsym $mod+left move left
bindsym $mod+down move down
bindsym $mod+up move up
bindsym $mod+right move right

##############
# workspaces #
##############

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+shift+1 move container to workspace number 1
bindsym $mod+shift+2 move container to workspace number 2
bindsym $mod+shift+3 move container to workspace number 3
bindsym $mod+shift+4 move container to workspace number 4
bindsym $mod+shift+5 move container to workspace number 5
bindsym $mod+shift+6 move container to workspace number 6
bindsym $mod+shift+7 move container to workspace number 7
bindsym $mod+shift+8 move container to workspace number 8
bindsym $mod+shift+9 move container to workspace number 9
bindsym $mod+shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

# Switch between workspaces
bindsym $mod+bracketleft workspace prev
bindsym $mod+bracketright workspace next

# Send to next workspace
bindsym $mod+shift+bracketleft move container to workspace prev
bindsym $mod+shift+bracketright move container to workspace next

################
# layout stuff #
################

# You can "split" the current object of your focus with
# $mod+h or $mod+v, for horizontal and vertical splits.
bindsym $mod+h splitv
bindsym $mod+v splith
# currently running into some difficulty with autotiling

# Switch the current container between different layout styles
bindsym $mod+m layout toggle stacking
#bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+s floating toggle

# Move focus to the parent container
bindsym $mod+a focus parent

##############
# scratchpad #
##############

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

##############
# media keys #
##############

bindsym --locked XF86AudioMute exec pactl set-sink-mute 0 toggle && \
	notify-send -a "pactl" -u low -r "865863" -i audio-volume-high \
	"Volume: $(pulsemixer --get-volume | sed 's/ .*//')%" \
	"$(test $(pulsemixer --get-mute) -ne 1 || echo 'mute')"
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume 0 -5% && \
	notify-send -a "pactl" -u low -r "865863" -i audio-volume-high \
	"Volume: $(pulsemixer --get-volume | sed 's/ .*//')%" \
	"$(test $(pulsemixer --get-mute) -ne 1 || echo 'mute')"
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume 0 +5% && \
	notify-send -a "pactl" -u low -r "865863" -i audio-volume-high \
	"Volume: $(pulsemixer --get-volume | sed 's/ .*//')%" \
	"$(test $(pulsemixer --get-mute) -ne 1 || echo 'mute')"

# Do not work - likely the wrong keys
bindsym --locked XF86MonBrightnessDown exec light -U 2 && \
	notify-send -a "light" -u normal -r "21311" -i xfpm-brightness-lcd \
	"Backlight: $(light -G | sed 's/\..*//')%"
bindsym --locked XF86MonBrightnessUp exec light -A 2 && \
	notify-send -a "light" -u normal -r "21311" -i xfpm-brightness-lcd \
	"Backlight: $(light -G | sed 's/\..*//')%"

bindsym XF86Favorites exec grim ~/Pictures/screenshots/$(date +%Y)/$(date +%Y-%m-%d-%H%M%S.png) && \
	notify-send -a "grim" -u low -r "131913" \
	"Screenshot captured" "screen saved to ~/Pictures/screenshots/$(date +%Y)"
bindsym $mod+XF86Favorites notify-send -a "grim" -u low -r "131913" "Select an area" && \
	exec grim ~/Pictures/screenshots/$(date +%Y)/$(date +%Y-%m-%d-%H%M%S.png) -g $(slurp) && \
	notify-send -a "grim" -u low -r "131913" \
	"Screenshot captured" "area saved to ~/Pictures/screenshots/$(date +%Y)"

#######################
# resizing containers #
#######################

bindsym $mod+x mode "resize"

mode "resize" {
	# left will shrink the containers width
	# right will grow the containers width
	# up will shrink the containers height
	# down will grow the containers height
	bindsym left resize shrink width 10px
	bindsym down resize grow height 10px
	bindsym up resize shrink height 10px
	bindsym right resize grow width 10px

	# Return to default mode
	bindsym return mode "default"
	bindsym escape mode "default"
	bindsym $mod+x mode "default"
}

##############
# status bar #
##############
# Read `man 5 sway-bar` for more information about this section.
bar {
	position bottom
	gaps 10

	# When the status_command prints a new line to stdout, swaybar updates.
	# The default just shows the current date and time.
	# status_command while date +'%Y-%m-%d %l:%M %p'; do sleep 1; done

	colors {
		statusline #dfdfdf
		background #2F343F
		inactive_workspace #32323200 #32323200 #dfdfdf
	}

	status_command i3blocks
}

include /etc/sway/config.d/*

exec autotiling
exec dunst

#####################
### special notes ###
#####################

#	mod
#	`	1	2	3	4	5	6	7	8	9	0	-	backspace
#												-	=
#	q	w	e	r	t	y	u	i	o	p	[	]	\
#	q		e		t	y	u	i	o	p	[	]	\
#	tab	a	s	d	f	g		j	k	l	;	'	enter
#	tab	a	s	d		g	h	j	k	l	;	'
#			z	x	c	v	b	n	m	,	.	/
#			z	x	c		b	n	m	,	.	/

#	mod
#	mako	workspaces							-	=	lock
#	q	close	e	reload	t	y	u	i	o	p	[	]	\
#	tab	a	s	d	fullscreen	g	hsplit	j	k	l	;	terminal
#			z	x	c	vsplit	b	n	m	,	.	/

#	mod + shift
#	`	1	2	3	4	5	6	7	8	9	0	-	backspace
#	`	1	2	3	4	5	6	7	8	9	0	-	backspace
#	q	w	e	r	t	y	u	i	o	p	[	]	\
#	q	w	e		t	y	u	i	o	p	[	]	\
#	tab	a	s	d	f	g	h	j	k	l	;	'	enter
#	tab	a	s	d	f	g	h	j	k	l	;	'	enter
#			z	x	c	v	b	n	m	,	.	/
#			z	x	c	v	b	n	m	,	.	/

#	`	1	2	3	4	5	6	7	8	9	0	-	backspace
#	q	w	e	exit	t	y	u	i	o	p	[	]	\
#	tab	a	s	d	f	g	h	j	k	l	;	'	enter
#			z	x	c	v	b	n	m	,	.	/
